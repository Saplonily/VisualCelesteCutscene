<UserControl x:Class="VisualCelesteCutscene.DialogEditView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:VisualCelesteCutscene"
             mc:Ignorable="d" 
             d:DataContext="{d:DesignInstance Type={x:Type local:DialogEditViewModel}, IsDesignTimeCreatable=False}"
             d:DesignHeight="900" d:DesignWidth="1600"
             d:Background="White">
  <UserControl.Resources>
    <!--#region Control Styles-->
    <!-- Header Info -->
    <Style TargetType="Border" x:Key="HeaderInfoBorder">
      <Setter Property="Margin" Value="8 0"/>
      <Setter Property="BorderThickness" Value="2"/>
      <Setter Property="BorderBrush">
        <Setter.Value>
          <SolidColorBrush Color="Black"/>
        </Setter.Value>
      </Setter>
      <Setter Property="Padding" Value="16 0"/>
      <Setter Property="CornerRadius" Value="4"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="HeaderInfoTextBlock">
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
    </Style>
    <!-- ComboBox-->
    <Style TargetType="ComboBox">
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="8"/>
      <Setter Property="SelectedIndex" Value="0"/>
    </Style>
    <Style TargetType="TextBlock" x:Key="CharacterTextBlock">
      <Setter Property="FontSize" Value="20"/>
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="Margin" Value="8"/>
    </Style>
    <Style TargetType="CheckBox" x:Key="CharacterCheckBox">
      <Setter Property="VerticalAlignment" Value="Center"/>
      <Setter Property="VerticalContentAlignment" Value="Bottom"/>
      <Setter Property="Margin" Value="8"/>
      <Setter Property="LayoutTransform">
        <Setter.Value>
          <ScaleTransform ScaleX="1.5" ScaleY="1.5"/>
        </Setter.Value>
      </Setter>
    </Style>
    <!-- Action Button -->
    <Style TargetType="Button" x:Key="ActionButton" BasedOn="{StaticResource {x:Type Button}}">
      <Setter Property="Margin" Value="8"/>
      <Setter Property="Padding" Value="16 0"/>
      <Setter Property="DockPanel.Dock" Value="Right" />
    </Style>
    <!--#endregion-->
  </UserControl.Resources>
  <Grid d:ShowGridLines="True">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="0.4*" MaxWidth="512" MinWidth="64"/>
      <ColumnDefinition Width="1*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="48"/>
      <RowDefinition/>
    </Grid.RowDefinitions>
    <!-- splitter -->
    <GridSplitter Grid.RowSpan="3" Grid.Column="0" HorizontalAlignment="Right"/>
    <!-- head menu -->
    <!-- dialog entries search box-->
    <Border Grid.Row="0" Grid.Column="0" Margin="4" BorderBrush="{x:Static SystemColors.ActiveBorderBrush}" BorderThickness="1">
      <DockPanel>
        <TextBlock Text="🔍" FontSize="20" VerticalAlignment="Center" HorizontalAlignment="Right" Margin="4 0" DockPanel.Dock="Right"/>
        <TextBox VerticalContentAlignment="Center"
                 Text="{Binding EntrySearchText, UpdateSourceTrigger=PropertyChanged}"
                 Padding="8 0" FontSize="20" BorderThickness="0"/>
      </DockPanel>
    </Border>
    <!-- dialog entries -->
    <!-- TODO help, how to make this listbox inline editable, instead of showing a new window -->
    <ListBox d:ItemsSource="{d:SampleData ItemCount=20}" ItemsSource="{Binding EntriesToShow}"
             Margin="4" SelectedItem="{Binding SelectedEntry}"
             Grid.Row="1" Grid.Column="0"
             HorizontalContentAlignment="Stretch"
             x:Name="entriesListBox">
      <ListBox.ItemTemplate>
        <DataTemplate DataType="{x:Type local:EntryViewModel}">
          <TextBlock Text="{Binding EntryName}" FontSize="16" Padding="8" 
                     FontStyle="{Binding Path=IsDirty, Mode=OneWay, Converter={StaticResource cvtDirtyToItalic}}"
                     d:FontStyle="Normal"/>
        </DataTemplate>
      </ListBox.ItemTemplate>
      <ListBox.Resources>
        <ContextMenu x:Key="itemContextMenu">
          <MenuItem Header="添加新项(_A)" Command="{Binding DataContext.AddNewEntryCommand, Source={x:Reference entriesListBox}}"/>
          <MenuItem Header="拷贝项(_D)" Command="{Binding DataContext.DuplicateEntryCommand, Source={x:Reference entriesListBox}}" />
          <MenuItem Header="重命名项(_R)" Command="{Binding DataContext.RenameEntryCommand, Source={x:Reference entriesListBox}}"/>
          <Separator/>
          <MenuItem Header="删除项(_X)" Command="{Binding DataContext.DeleteEntryCommand, Source={x:Reference entriesListBox}}"/>
        </ContextMenu>
      </ListBox.Resources>
      <ListBox.ItemContainerStyle>
        <Style TargetType="ListBoxItem">
          <Setter Property="ContextMenu" Value="{StaticResource itemContextMenu}"/>
        </Style>
      </ListBox.ItemContainerStyle>
    </ListBox>

    <!-- dialog page edit -->
    <DockPanel Grid.Row="0" Grid.Column="1" LastChildFill="False">
      <Button Content="预览" Style="{StaticResource ActionButton}"
            Command="{Binding PreviewPlotEntryCommand}"/>
      <Button Content="新建" Style="{StaticResource ActionButton}" 
            Command="{Binding AddNewPageCommand}"/>
      <Button Content="拷贝" Style="{StaticResource ActionButton}"
            CommandParameter="{Binding SelectedPage}"
            Command="{Binding DuplicatePageCommand}"/>
      <Button Content="更改项类型" Style="{StaticResource ActionButton}"
            Command="{Binding ChangeEntryTypeCommand}"/>

      <StackPanel Orientation="Horizontal">
        <StackPanel.Style>
          <Style TargetType="StackPanel">
            <Setter Property="IsEnabled" Value="True"/>
            <Style.Triggers>
              <DataTrigger Binding="{Binding SelectedPlotPage}" Value="{x:Null}">
                <Setter Property="IsEnabled" Value="False"/>
              </DataTrigger>
            </Style.Triggers>
          </Style>
        </StackPanel.Style>
        <TextBlock Text="人物:" Style="{StaticResource CharacterTextBlock}"/>
        <ComboBox IsEditable="True" MinWidth="128"
                Text="{Binding Character}"
                ItemsSource="{Binding AvailableCharacters}"/>

        <TextBlock Text="表情:" Style="{StaticResource CharacterTextBlock}"/>
        <ComboBox IsEditable="True" MinWidth="128"
                Text="{Binding SelectedPlotPage.SubCharacter}"
                ItemsSource="{Binding AvailableSubCharacters}"
                />

        <CheckBox Content="居右" Style="{StaticResource CharacterCheckBox}" IsChecked="{Binding SelectedPlotPage.AtRight}"/>

        <CheckBox Content="镜像" Style="{StaticResource CharacterCheckBox}" IsChecked="{Binding SelectedPlotPage.Flip}"/>

        <CheckBox Content="靠底" Style="{StaticResource CharacterCheckBox}" IsChecked="{Binding SelectedPlotPage.AnchorBottom}"/>
      </StackPanel>
    </DockPanel>
    <!-- dialog pages or translation entry -->
    <Border Grid.Row="1" Grid.Column="1"
          BorderThickness="1" CornerRadius="8" Margin="8"
          BorderBrush="{x:Static SystemColors.ActiveBorderBrush}">
      <UniformGrid>
        <ContentPresenter Content="{Binding SelectedEntryEdit}" d:Content="{d:DesignInstance Type={x:Type local:PlotEntryEditViewModel}, IsDesignTimeCreatable=True}">
          <ContentPresenter.Resources>
            <DataTemplate DataType="{x:Type local:PlotEntryEditViewModel}">
              <ListBox ItemsSource="{Binding PagesViewModels, NotifyOnTargetUpdated=True}"
                   d:ItemsSource="{d:SampleData ItemCount=10}" d:Visibility="Visible"
                   SelectedItem="{Binding Path=DataContext.SelectedPage, RelativeSource={RelativeSource AncestorType=local:DialogEditView}, Mode=TwoWay}"
                   x:Name="pageSelector" HorizontalContentAlignment="Stretch"
                   ScrollViewer.CanContentScroll="False"
                   Margin="4" BorderThickness="0">
                <ListBox.ItemContainerStyle>
                  <Style TargetType="ListBoxItem">
                    <Setter Property="Margin" Value="0 2"/>
                    <Setter Property="Focusable" Value="False"/>
                    <EventSetter Event="GotFocus" Handler="ListBoxItem_GotFocus"/>
                  </Style>
                </ListBox.ItemContainerStyle>
                <ListBox.ItemTemplate>
                  <DataTemplate>
                    <local:DialogPage/>
                  </DataTemplate>
                </ListBox.ItemTemplate>
              </ListBox>
            </DataTemplate>
            <DataTemplate DataType="{x:Type local:TranslationEntryEditViewModel}">
              <local:DialogTextBox Text="{Binding Translation, UpdateSourceTrigger=PropertyChanged}" Margin="8" MinHeight="92" 
                           VerticalAlignment="Top" FontSize="20" Padding="8"
                           AcceptsReturn="True" VerticalScrollBarVisibility="Auto">
              </local:DialogTextBox>
            </DataTemplate>
          </ContentPresenter.Resources>
        </ContentPresenter>
      </UniformGrid>
    </Border>
  </Grid>
</UserControl>
